"""empty message

Revision ID: 44bf4d541cc0
Revises: 3c35134e2bd8
Create Date: 2021-05-26 01:56:03.511304

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '44bf4d541cc0'
down_revision = '3c35134e2bd8'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('delivery_time_slot', 'status')
    op.add_column('orders', sa.Column('delivered_time', sa.DateTime(), nullable=True))
    op.add_column('orders', sa.Column('delivery_fee', sa.Numeric(precision=10, scale=2), nullable=False))
    op.add_column('orders', sa.Column('delivery_timeslot_end', sa.Time(), nullable=False))
    op.add_column('orders', sa.Column('delivery_timeslot_start', sa.Time(), nullable=False))
    op.alter_column('orders', 'billing_first_name',
               existing_type=postgresql.BYTEA(),
               nullable=False)
    op.alter_column('orders', 'billing_last_name',
               existing_type=postgresql.BYTEA(),
               nullable=False)
    op.alter_column('orders', 'billing_parish',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('orders', 'billing_street',
               existing_type=postgresql.BYTEA(),
               nullable=False)
    op.alter_column('orders', 'billing_town',
               existing_type=postgresql.BYTEA(),
               nullable=False)
    op.alter_column('orders', 'delivery_date',
               existing_type=sa.DATE(),
               nullable=False)
    op.alter_column('orders', 'delivery_first_name',
               existing_type=postgresql.BYTEA(),
               nullable=False)
    op.alter_column('orders', 'delivery_last_name',
               existing_type=postgresql.BYTEA(),
               nullable=False)
    op.alter_column('orders', 'delivery_parish',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('orders', 'delivery_street',
               existing_type=postgresql.BYTEA(),
               nullable=False)
    op.alter_column('orders', 'delivery_town',
               existing_type=postgresql.BYTEA(),
               nullable=False)
    op.drop_constraint('orders_delivery_timeslot_fkey', 'orders', type_='foreignkey')
    op.drop_constraint('orders_billing_parish_fkey', 'orders', type_='foreignkey')
    op.drop_constraint('orders_delivery_parish_fkey', 'orders', type_='foreignkey')
    op.drop_column('orders', 'delivery_timeslot')
    op.drop_constraint('taxes_on_goods_grocery_id_fkey', 'taxes_on_goods', type_='foreignkey')
    op.create_foreign_key('taxes_on_goods_grocery_id_fkey', 'taxes_on_goods', 'grocery', ['grocery_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'taxes_on_goods', type_='foreignkey')
    op.create_foreign_key('taxes_on_goods_grocery_id_fkey', 'taxes_on_goods', 'taxes', ['tax'], ['tax'])
    op.add_column('orders', sa.Column('delivery_timeslot', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('orders_delivery_parish_fkey', 'orders', 'delivery_parish', ['delivery_parish'], ['id'])
    op.create_foreign_key('orders_billing_parish_fkey', 'orders', 'delivery_parish', ['billing_parish'], ['id'])
    op.create_foreign_key('orders_delivery_timeslot_fkey', 'orders', 'delivery_time_slot', ['delivery_timeslot'], ['id'])
    op.alter_column('orders', 'delivery_town',
               existing_type=postgresql.BYTEA(),
               nullable=True)
    op.alter_column('orders', 'delivery_street',
               existing_type=postgresql.BYTEA(),
               nullable=True)
    op.alter_column('orders', 'delivery_parish',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('orders', 'delivery_last_name',
               existing_type=postgresql.BYTEA(),
               nullable=True)
    op.alter_column('orders', 'delivery_first_name',
               existing_type=postgresql.BYTEA(),
               nullable=True)
    op.alter_column('orders', 'delivery_date',
               existing_type=sa.DATE(),
               nullable=True)
    op.alter_column('orders', 'billing_town',
               existing_type=postgresql.BYTEA(),
               nullable=True)
    op.alter_column('orders', 'billing_street',
               existing_type=postgresql.BYTEA(),
               nullable=True)
    op.alter_column('orders', 'billing_parish',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('orders', 'billing_last_name',
               existing_type=postgresql.BYTEA(),
               nullable=True)
    op.alter_column('orders', 'billing_first_name',
               existing_type=postgresql.BYTEA(),
               nullable=True)
    op.drop_column('orders', 'delivery_timeslot_start_time')
    op.drop_column('orders', 'delivery_timeslot_end_time')
    op.drop_column('orders', 'delivery_fee')
    op.drop_column('orders', 'delivered_time')
    op.add_column('delivery_time_slot', sa.Column('status', sa.BOOLEAN(), autoincrement=False, nullable=False))
    # ### end Alembic commands ###
